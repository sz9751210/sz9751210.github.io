<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>go on 艾倫的程式之旅</title>
    <link>https://sz9751210.github.io/tags/go/</link>
    <description>Recent content in go on 艾倫的程式之旅</description>
    <image>
      <url>https://sz9751210.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://sz9751210.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 08 Sep 2023 15:50:00 +0800</lastBuildDate><atom:link href="https://sz9751210.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>淺談Go中的Pointer和記憶體管理</title>
      <link>https://sz9751210.github.io/posts/go-pointer/</link>
      <pubDate>Fri, 08 Sep 2023 15:50:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-pointer/</guid>
      <description>go pointer</description>
    </item>
    
    <item>
      <title>錯誤處理的精髓：快速了解Go語言的 error、panic和recover</title>
      <link>https://sz9751210.github.io/posts/go-error/</link>
      <pubDate>Thu, 07 Sep 2023 11:30:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-error/</guid>
      <description>golang error handling</description>
    </item>
    
    <item>
      <title>Go語言的defer：確保後置操作的執行</title>
      <link>https://sz9751210.github.io/posts/go-defer/</link>
      <pubDate>Wed, 06 Sep 2023 20:30:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-defer/</guid>
      <description>go defer</description>
    </item>
    
    <item>
      <title>保證型別安全：使用Go的Type Assertions避免型別錯誤</title>
      <link>https://sz9751210.github.io/posts/go-type-assertion/</link>
      <pubDate>Tue, 05 Sep 2023 15:31:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-type-assertion/</guid>
      <description>go type assertion</description>
    </item>
    
    <item>
      <title>從零開始：使用make函數創建資料結構</title>
      <link>https://sz9751210.github.io/posts/go-make/</link>
      <pubDate>Mon, 04 Sep 2023 19:26:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-make/</guid>
      <description>go make</description>
    </item>
    
    <item>
      <title>Package：Golang 專案的組織策略</title>
      <link>https://sz9751210.github.io/posts/go-package/</link>
      <pubDate>Fri, 01 Sep 2023 15:39:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-package/</guid>
      <description>套件（Package）在Golang中扮演著組織和管理程式碼的重要角色</description>
    </item>
    
    <item>
      <title>Interface：Go 語言中的抽象關鍵</title>
      <link>https://sz9751210.github.io/posts/go-interface/</link>
      <pubDate>Thu, 31 Aug 2023 19:12:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-interface/</guid>
      <description>深入探索 Go 語言中的Interface概念，了解如何使用Interface定義物件間的契約，從而實現更具靈活性和可擴展性的程式碼。</description>
    </item>
    
    <item>
      <title>探索 Golang 中的結構體：如何有效地組織複雜資料</title>
      <link>https://sz9751210.github.io/posts/go-struct/</link>
      <pubDate>Wed, 30 Aug 2023 16:06:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-struct/</guid>
      <description>探索Golang中結構體的優越性，以及如何運用結構體更有效地組織和處理複雜數據。了解結構體的基礎、複雜數據的嵌套組織，以及結構體方法的運用，助力你打造更有組織性、優雅的程式碼。</description>
    </item>
    
    <item>
      <title>🚀 Golang 函數：從入門到精通</title>
      <link>https://sz9751210.github.io/posts/go-func/</link>
      <pubDate>Tue, 29 Aug 2023 14:54:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-func/</guid>
      <description>go func</description>
    </item>
    
    <item>
      <title>淺談 Go 語言中的 Map - 快速查詢與狀態儲存的利器</title>
      <link>https://sz9751210.github.io/posts/go-map/</link>
      <pubDate>Mon, 28 Aug 2023 16:36:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-map/</guid>
      <description>go map</description>
    </item>
    
    <item>
      <title>Go 語言中的動態陣列：深入解析切片</title>
      <link>https://sz9751210.github.io/posts/go-slice/</link>
      <pubDate>Thu, 24 Aug 2023 14:24:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-slice/</guid>
      <description>切片是Go語言的動態資料結構，解決陣列大小限制，適用於動態集合操作，並具彈性、引用特性，適用於多場景。</description>
    </item>
    
    <item>
      <title>陣列：Go語言中的數據小倉庫</title>
      <link>https://sz9751210.github.io/posts/go-array/</link>
      <pubDate>Thu, 24 Aug 2023 11:06:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-array/</guid>
      <description>golang array</description>
    </item>
    
    <item>
      <title>探索 Go 語言的流程控制</title>
      <link>https://sz9751210.github.io/posts/go-control-flow/</link>
      <pubDate>Mon, 21 Aug 2023 16:01:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-control-flow/</guid>
      <description>go control flow</description>
    </item>
    
    <item>
      <title>Go 語言的各種運算符</title>
      <link>https://sz9751210.github.io/posts/go-operator/</link>
      <pubDate>Mon, 21 Aug 2023 15:15:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-operator/</guid>
      <description>golang 運算符</description>
    </item>
    
    <item>
      <title>Golang 的資料型別一覽</title>
      <link>https://sz9751210.github.io/posts/golang-datatype/</link>
      <pubDate>Thu, 17 Aug 2023 11:14:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/golang-datatype/</guid>
      <description>golang 資料型別</description>
    </item>
    
    <item>
      <title>淺談 Golang 變數與常數：宣告、初始化與使用</title>
      <link>https://sz9751210.github.io/posts/go-variable-and-const/</link>
      <pubDate>Wed, 16 Aug 2023 14:34:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-variable-and-const/</guid>
      <description>在本篇文章中，我們將探索 Golang 中變數與常數的基本宣告方式、初始化方法以及使用技巧，助您深入了解這門語言的核心概念。</description>
    </item>
    
    <item>
      <title>🚀入門 Go 語言：關鍵概念、語法結構與實用技巧✨</title>
      <link>https://sz9751210.github.io/posts/go-syntax/</link>
      <pubDate>Tue, 15 Aug 2023 15:32:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/go-syntax/</guid>
      <description>golang syntax</description>
    </item>
    
    <item>
      <title>如何在go中驗證SSL憑證</title>
      <link>https://sz9751210.github.io/posts/how-to-validate-ssl-certificates-in-go/</link>
      <pubDate>Mon, 07 Aug 2023 11:09:00 +0800</pubDate>
      
      <guid>https://sz9751210.github.io/posts/how-to-validate-ssl-certificates-in-go/</guid>
      <description>## 如何在go中驗證SSL憑證</description>
    </item>
    
  </channel>
</rss>
